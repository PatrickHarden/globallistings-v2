{"ast":null,"code":"var formatCoordinate = function formatCoordinate(lat, lng) {\n  return \"\".concat(lat, \",\").concat(lng);\n};\n\nexport var boundsToSquare = function boundsToSquare(bounds) {\n  var ne = bounds.ne,\n      sw = bounds.sw;\n  return [formatCoordinate(ne.lat, ne.lng), formatCoordinate(sw.lat, ne.lng), formatCoordinate(sw.lat, sw.lng), formatCoordinate(ne.lat, sw.lng)];\n};","map":{"version":3,"names":["formatCoordinate","lat","lng","boundsToSquare","bounds","ne","sw"],"sources":["/Users/zentoo/Code/v2/src/utils/boundsToSquare.ts"],"sourcesContent":["import { Bounds } from '../types/state';\n\nconst formatCoordinate = (lat: number, lng: number) => `${lat},${lng}`;\n\nexport const boundsToSquare = (bounds: Bounds) => {\n  const { ne, sw } = bounds;\n\n  return [\n    formatCoordinate(ne.lat, ne.lng),\n    formatCoordinate(sw.lat, ne.lng),\n    formatCoordinate(sw.lat, sw.lng),\n    formatCoordinate(ne.lat, sw.lng),\n  ];\n};\n"],"mappings":"AAEA,IAAMA,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,GAAD,EAAcC,GAAd;EAAA,iBAAiCD,GAAjC,cAAwCC,GAAxC;AAAA,CAAzB;;AAEA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,MAAD,EAAoB;EAAA,IACxCC,EADwC,GAC7BD,MAD6B,CACxCC,EADwC;EAAA,IACpCC,EADoC,GAC7BF,MAD6B,CACpCE,EADoC;EAGhD,OAAO,CACLN,gBAAgB,CAACK,EAAE,CAACJ,GAAJ,EAASI,EAAE,CAACH,GAAZ,CADX,EAELF,gBAAgB,CAACM,EAAE,CAACL,GAAJ,EAASI,EAAE,CAACH,GAAZ,CAFX,EAGLF,gBAAgB,CAACM,EAAE,CAACL,GAAJ,EAASK,EAAE,CAACJ,GAAZ,CAHX,EAILF,gBAAgB,CAACK,EAAE,CAACJ,GAAJ,EAASK,EAAE,CAACJ,GAAZ,CAJX,CAAP;AAMD,CATM"},"metadata":{},"sourceType":"module"}