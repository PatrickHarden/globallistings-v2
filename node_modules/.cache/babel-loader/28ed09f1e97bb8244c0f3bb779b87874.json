{"ast":null,"code":"import _toConsumableArray from \"/Users/zentoo/Code/v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { connect } from 'react-redux';\nimport { addLocaleData, IntlProvider } from 'react-intl';\nimport de from 'react-intl/locale-data/de';\nimport it from 'react-intl/locale-data/it';\nimport fr from 'react-intl/locale-data/fr';\nimport no from 'react-intl/locale-data/no';\nimport pt from 'react-intl/locale-data/pt';\nimport es from 'react-intl/locale-data/es';\nimport sr from 'react-intl/locale-data/sr';\nimport he from 'react-intl/locale-data/he';\nimport fi from 'react-intl/locale-data/fi';\nimport zh from 'react-intl/locale-data/zh';\nimport nb from 'react-intl/locale-data/nb';\nimport pl from 'react-intl/locale-data/pl';\nimport { messagesSelector, localeSelector } from './redux/selectors/state';\naddLocaleData([].concat(_toConsumableArray(de), _toConsumableArray(it), _toConsumableArray(fr), _toConsumableArray(no), _toConsumableArray(nb), _toConsumableArray(pt), _toConsumableArray(es), _toConsumableArray(sr), _toConsumableArray(he), _toConsumableArray(fi), _toConsumableArray(zh), _toConsumableArray(pl))); // TODO: Dynamically load locale data\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    locale: localeSelector(state),\n    messages: messagesSelector(state)\n  };\n};\n\nexport default connect(mapStateToProps)(IntlProvider);","map":{"version":3,"names":["connect","addLocaleData","IntlProvider","de","it","fr","no","pt","es","sr","he","fi","zh","nb","pl","messagesSelector","localeSelector","mapStateToProps","state","locale","messages"],"sources":["/Users/zentoo/Code/v2/src/connected-intl-provider.ts"],"sourcesContent":["import { connect } from 'react-redux';\nimport { addLocaleData, IntlProvider } from 'react-intl';\nimport de from 'react-intl/locale-data/de';\nimport it from 'react-intl/locale-data/it';\nimport fr from 'react-intl/locale-data/fr';\nimport no from 'react-intl/locale-data/no';\nimport pt from 'react-intl/locale-data/pt';\nimport es from 'react-intl/locale-data/es';\nimport sr from 'react-intl/locale-data/sr';\nimport he from 'react-intl/locale-data/he';\nimport fi from 'react-intl/locale-data/fi';\nimport zh from 'react-intl/locale-data/zh';\nimport nb from 'react-intl/locale-data/nb';\nimport pl from 'react-intl/locale-data/pl';\n\nimport { State } from './types/state';\nimport { messagesSelector, localeSelector } from './redux/selectors/state';\n\naddLocaleData([...de, ...it, ...fr, ...no, ...nb, ...pt, ...es, ...sr, ...he, ...fi, ...zh, ...pl]); // TODO: Dynamically load locale data\n\nconst mapStateToProps = (state: State) => ({\n  locale: localeSelector(state),\n  messages: messagesSelector(state),\n});\n\nexport default connect(mapStateToProps)(IntlProvider);\n"],"mappings":";AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,EAAwBC,YAAxB,QAA4C,YAA5C;AACA,OAAOC,EAAP,MAAe,2BAAf;AACA,OAAOC,EAAP,MAAe,2BAAf;AACA,OAAOC,EAAP,MAAe,2BAAf;AACA,OAAOC,EAAP,MAAe,2BAAf;AACA,OAAOC,EAAP,MAAe,2BAAf;AACA,OAAOC,EAAP,MAAe,2BAAf;AACA,OAAOC,EAAP,MAAe,2BAAf;AACA,OAAOC,EAAP,MAAe,2BAAf;AACA,OAAOC,EAAP,MAAe,2BAAf;AACA,OAAOC,EAAP,MAAe,2BAAf;AACA,OAAOC,EAAP,MAAe,2BAAf;AACA,OAAOC,EAAP,MAAe,2BAAf;AAGA,SAASC,gBAAT,EAA2BC,cAA3B,QAAiD,yBAAjD;AAEAf,aAAa,8BAAKE,EAAL,sBAAYC,EAAZ,sBAAmBC,EAAnB,sBAA0BC,EAA1B,sBAAiCO,EAAjC,sBAAwCN,EAAxC,sBAA+CC,EAA/C,sBAAsDC,EAAtD,sBAA6DC,EAA7D,sBAAoEC,EAApE,sBAA2EC,EAA3E,sBAAkFE,EAAlF,GAAb,C,CAAqG;;AAErG,IAAMG,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;EAAA,OAAmB;IACzCC,MAAM,EAAEH,cAAc,CAACE,KAAD,CADmB;IAEzCE,QAAQ,EAAEL,gBAAgB,CAACG,KAAD;EAFe,CAAnB;AAAA,CAAxB;;AAKA,eAAelB,OAAO,CAACiB,eAAD,CAAP,CAAyBf,YAAzB,CAAf"},"metadata":{},"sourceType":"module"}