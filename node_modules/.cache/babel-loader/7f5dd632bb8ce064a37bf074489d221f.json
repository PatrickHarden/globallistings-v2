{"ast":null,"code":"import Loadable from 'react-loadable';\nimport { LoadableLoader } from '../../components/loader/loader';\nimport { withValidation } from '../../components/validator/validator';\nimport { validateUrl } from '../../redux/actions/geocode';\nimport { isPlpLocationGeocoded, isUsageTypeConfigLoaded, isPlpPath } from '../../redux/selectors/plp';\nimport { fetchConfig } from '../../redux/actions/config';\nimport { compose } from 'ramda';\nvar LoadableComponent = Loadable({\n  loader: function loader() {\n    return import(\n    /* webpackChunkName: \"PLP\" */\n    './plp-container');\n  },\n  loading: LoadableLoader\n});\nvar validateLocationName = withValidation({\n  isValid: isPlpLocationGeocoded,\n  validate: validateUrl\n});\nvar validatePropertyType = withValidation({\n  isValid: isUsageTypeConfigLoaded,\n  validate: fetchConfig\n});\nvar validatePlpUrl = withValidation({\n  isValid: isPlpPath,\n  validate: function validate() {\n    return function () {\n      return undefined;\n    };\n  }\n});\nexport default compose(validatePlpUrl, validatePropertyType, validateLocationName)(LoadableComponent);","map":{"version":3,"names":["Loadable","LoadableLoader","withValidation","validateUrl","isPlpLocationGeocoded","isUsageTypeConfigLoaded","isPlpPath","fetchConfig","compose","LoadableComponent","loader","loading","validateLocationName","isValid","validate","validatePropertyType","validatePlpUrl","undefined"],"sources":["/Users/zentoo/Code/v2/src/views/plp/loadable-plp.tsx"],"sourcesContent":["import Loadable from 'react-loadable';\nimport { LoadableLoader } from '../../components/loader/loader';\nimport { withValidation } from '../../components/validator/validator';\nimport { validateUrl } from '../../redux/actions/geocode';\nimport {\n  isPlpLocationGeocoded,\n  isUsageTypeConfigLoaded,\n  isPlpPath,\n} from '../../redux/selectors/plp';\nimport { fetchConfig } from '../../redux/actions/config';\nimport { compose } from 'ramda';\n\nconst LoadableComponent = Loadable({\n  loader: () => import(/* webpackChunkName: \"PLP\" */ './plp-container'),\n  loading: LoadableLoader,\n});\n\nconst validateLocationName = withValidation({\n  isValid: isPlpLocationGeocoded,\n  validate: validateUrl,\n});\n\nconst validatePropertyType = withValidation({\n  isValid: isUsageTypeConfigLoaded,\n  validate: fetchConfig,\n});\n\nconst validatePlpUrl = withValidation({\n  isValid: isPlpPath,\n  validate: () => () => undefined,\n});\n\nexport default compose(\n  validatePlpUrl,\n  validatePropertyType,\n  validateLocationName\n)(LoadableComponent);\n"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,gBAArB;AACA,SAASC,cAAT,QAA+B,gCAA/B;AACA,SAASC,cAAT,QAA+B,sCAA/B;AACA,SAASC,WAAT,QAA4B,6BAA5B;AACA,SACEC,qBADF,EAEEC,uBAFF,EAGEC,SAHF,QAIO,2BAJP;AAKA,SAASC,WAAT,QAA4B,4BAA5B;AACA,SAASC,OAAT,QAAwB,OAAxB;AAEA,IAAMC,iBAAiB,GAAGT,QAAQ,CAAC;EACjCU,MAAM,EAAE;IAAA,OAAM;IAAO;IAA8B,iBAArC,CAAN;EAAA,CADyB;EAEjCC,OAAO,EAAEV;AAFwB,CAAD,CAAlC;AAKA,IAAMW,oBAAoB,GAAGV,cAAc,CAAC;EAC1CW,OAAO,EAAET,qBADiC;EAE1CU,QAAQ,EAAEX;AAFgC,CAAD,CAA3C;AAKA,IAAMY,oBAAoB,GAAGb,cAAc,CAAC;EAC1CW,OAAO,EAAER,uBADiC;EAE1CS,QAAQ,EAAEP;AAFgC,CAAD,CAA3C;AAKA,IAAMS,cAAc,GAAGd,cAAc,CAAC;EACpCW,OAAO,EAAEP,SAD2B;EAEpCQ,QAAQ,EAAE;IAAA,OAAM;MAAA,OAAMG,SAAN;IAAA,CAAN;EAAA;AAF0B,CAAD,CAArC;AAKA,eAAeT,OAAO,CACpBQ,cADoB,EAEpBD,oBAFoB,EAGpBH,oBAHoB,CAAP,CAIbH,iBAJa,CAAf"},"metadata":{},"sourceType":"module"}