{"ast":null,"code":"import { theme } from '../../themes/default/theme';\nimport { createSelector } from 'reselect';\nimport { FilterType } from '../../types/config'; // State\n\nexport var entityMetaSelector = function entityMetaSelector(state) {\n  return state.entitiesMeta;\n};\nexport var entitiesSelector = function entitiesSelector(state) {\n  return state.entities;\n};\nexport var uiSelector = function uiSelector(state) {\n  return state.ui;\n};\nexport var locationSelector = function locationSelector(state) {\n  return state.router.location;\n}; // Entities\n\nexport var propertiesSelector = createSelector(entitiesSelector, function (entities) {\n  return entities.properties;\n});\nexport var geocodeSelector = createSelector(entitiesSelector, function (entities) {\n  return entities.geocode;\n});\nexport var propertySearchesSelector = createSelector(entitiesSelector, function (entities) {\n  return entities.propertySearches;\n});\nexport var configSelector = createSelector(entitiesSelector, function (entities) {\n  return entities.config;\n});\nexport var autocompleteSelector = createSelector(entitiesSelector, function (entities) {\n  return entities.autocomplete;\n});\nexport var autocompleteSearchesSelector = createSelector(entitiesSelector, function (entities) {\n  return entities.autocompleteSearches;\n}); // Meta\n\nexport var propertiesMetaSelector = createSelector(entityMetaSelector, function (meta) {\n  return meta.propertySearches;\n});\nexport var geocodeMetaSelector = createSelector(entityMetaSelector, function (meta) {\n  return meta.geocode;\n});\nexport var configMetaSelector = createSelector(entityMetaSelector, function (meta) {\n  return meta.config;\n});\nexport var autocompleteSearchesMetaSelector = createSelector(entityMetaSelector, function (meta) {\n  return meta.autocompleteSearches;\n}); // Config\n\nexport var localeSelector = createSelector(configSelector, function (config) {\n  return config.language;\n});\nexport var messagesSelector = createSelector(configSelector, function (config) {\n  return config.i18n;\n});\nexport var filtersSelector = createSelector(configSelector, function (config) {\n  return config.filters;\n});\nexport var rangeFiltersSelector = createSelector(filtersSelector, function (filters) {\n  return filters.filter(function (f) {\n    return f.type === FilterType.range;\n  });\n}); // Other\n// TODO add logic to switch between themes based on config\n\nexport var themeSelector = function themeSelector(state) {\n  return theme;\n}; // TODO figure out where it will be coming from\n\nexport var googleMapsApiKeySelector = function googleMapsApiKeySelector() {\n  return 'AIzaSyCzEw2NaQFixR7sZCLnZ1oGQljW7AxLZ7k';\n};","map":{"version":3,"names":["theme","createSelector","FilterType","entityMetaSelector","state","entitiesMeta","entitiesSelector","entities","uiSelector","ui","locationSelector","router","location","propertiesSelector","properties","geocodeSelector","geocode","propertySearchesSelector","propertySearches","configSelector","config","autocompleteSelector","autocomplete","autocompleteSearchesSelector","autocompleteSearches","propertiesMetaSelector","meta","geocodeMetaSelector","configMetaSelector","autocompleteSearchesMetaSelector","localeSelector","language","messagesSelector","i18n","filtersSelector","filters","rangeFiltersSelector","filter","f","type","range","themeSelector","googleMapsApiKeySelector"],"sources":["/Users/zentoo/Code/v2/src/redux/selectors/state.ts"],"sourcesContent":["import { State } from '../../types/state';\nimport { theme } from '../../themes/default/theme';\nimport { createSelector } from 'reselect';\nimport { FilterType } from '../../types/config';\n\n// State\nexport const entityMetaSelector = (state: State) => state.entitiesMeta;\nexport const entitiesSelector = (state: State) => state.entities;\nexport const uiSelector = (state: State) => state.ui;\nexport const locationSelector = (state: State) => state.router.location;\n\n// Entities\nexport const propertiesSelector = createSelector(\n  entitiesSelector,\n  entities => entities.properties\n);\n\nexport const geocodeSelector = createSelector(\n  entitiesSelector,\n  entities => entities.geocode\n);\n\nexport const propertySearchesSelector = createSelector(\n  entitiesSelector,\n  entities => entities.propertySearches\n);\n\nexport const configSelector = createSelector(\n  entitiesSelector,\n  entities => entities.config\n);\n\nexport const autocompleteSelector = createSelector(\n  entitiesSelector,\n  entities => entities.autocomplete\n);\n\nexport const autocompleteSearchesSelector = createSelector(\n  entitiesSelector,\n  entities => entities.autocompleteSearches\n);\n\n// Meta\nexport const propertiesMetaSelector = createSelector(\n  entityMetaSelector,\n  meta => meta.propertySearches\n);\n\nexport const geocodeMetaSelector = createSelector(\n  entityMetaSelector,\n  meta => meta.geocode\n);\n\nexport const configMetaSelector = createSelector(\n  entityMetaSelector,\n  meta => meta.config\n);\n\nexport const autocompleteSearchesMetaSelector = createSelector(\n  entityMetaSelector,\n  meta => meta.autocompleteSearches\n);\n\n// Config\nexport const localeSelector = createSelector(\n  configSelector,\n  config => config.language\n);\n\nexport const messagesSelector = createSelector(\n  configSelector,\n  config => config.i18n\n);\n\nexport const filtersSelector = createSelector(\n  configSelector,\n  config => config.filters\n);\n\nexport const rangeFiltersSelector = createSelector(\n  filtersSelector,\n  filters => filters.filter(f => f.type === FilterType.range)\n);\n\n// Other\n\n// TODO add logic to switch between themes based on config\nexport const themeSelector = (state: State) => theme;\n\n// TODO figure out where it will be coming from\nexport const googleMapsApiKeySelector = () => 'AIzaSyCzEw2NaQFixR7sZCLnZ1oGQljW7AxLZ7k';\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}