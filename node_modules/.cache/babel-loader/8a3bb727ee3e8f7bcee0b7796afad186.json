{"ast":null,"code":"import { convert } from '../../../api/converters/config';\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'FETCH_CONFIG_SUCCESS':\n      return convert(action.payload);\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"names":["convert","state","action","type","payload"],"sources":["/Users/zentoo/Code/v2/src/redux/reducers/entities/config.ts"],"sourcesContent":["import { convert } from '../../../api/converters/config';\nimport { createFetchConfigSuccess } from '../../actions/config';\nimport { ActionType } from 'typesafe-actions';\nimport { DeepPartial } from 'redux';\nimport { Config } from '../../../types/config';\n\nexport type Actions = ActionType<typeof createFetchConfigSuccess>;\n\nexport default (state: DeepPartial<Config> = {}, action: Actions): Config | {} => {\n  switch (action.type) {\n    case 'FETCH_CONFIG_SUCCESS':\n      return convert(action.payload);\n    default:\n      return state;\n  }\n};\n"],"mappings":"AAAA,SAASA,OAAT,QAAwB,gCAAxB;AAQA,gBAAe,YAAmE;EAAA,IAAlEC,KAAkE,uEAArC,EAAqC;EAAA,IAAjCC,MAAiC;;EAChF,QAAQA,MAAM,CAACC,IAAf;IACE,KAAK,sBAAL;MACE,OAAOH,OAAO,CAACE,MAAM,CAACE,OAAR,CAAd;;IACF;MACE,OAAOH,KAAP;EAJJ;AAMD,CAPD"},"metadata":{},"sourceType":"module"}