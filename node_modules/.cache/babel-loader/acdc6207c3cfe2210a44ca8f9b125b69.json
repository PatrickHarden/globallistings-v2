{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/zentoo/Code/v2/src/components/map/area.tsx\";\n\nimport * as React from 'react';\nimport { Circle, Rectangle } from 'react-google-maps';\nimport { boundsToGoogleBounds } from '../../utils/bounds';\nvar options = {\n  fillColor: 'rgb(0, 107, 76, 30)',\n  strokeColor: 'rgb(0, 107, 76)',\n  strokeWeight: 1\n};\nexport var Area = function Area(_ref) {\n  var area = _ref.area;\n\n  if (!area) {\n    return null;\n  }\n\n  switch (area.type) {\n    case 'circle':\n      return /*#__PURE__*/React.createElement(Circle, {\n        center: area.center,\n        radius: area.radius * 1000,\n        options: options,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 14\n        }\n      });\n\n    case 'rectangle':\n      return /*#__PURE__*/React.createElement(Rectangle, {\n        bounds: boundsToGoogleBounds(area.bounds),\n        options: options,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 14\n        }\n      });\n\n    default:\n      throw new Error('Unsupported Area Type');\n  }\n};","map":{"version":3,"names":["React","Circle","Rectangle","boundsToGoogleBounds","options","fillColor","strokeColor","strokeWeight","Area","area","type","center","radius","bounds","Error"],"sources":["/Users/zentoo/Code/v2/src/components/map/area.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Circle, Rectangle } from 'react-google-maps';\n\nimport * as plp from '../../redux/selectors/plp';\nimport { Area as AreaType } from '../../redux/selectors/area';\n\nimport { boundsToGoogleBounds } from '../../utils/bounds';\n\ninterface Props {\n  readonly area?: AreaType;\n}\n\nconst options = {\n  fillColor: 'rgb(0, 107, 76, 30)',\n  strokeColor: 'rgb(0, 107, 76)',\n  strokeWeight: 1,\n};\n\nexport const Area: React.SFC<Props> = ({ area }) => {\n  if (!area) {\n    return null;\n  }\n\n  switch (area.type) {\n    case 'circle':\n      return <Circle center={area.center} radius={area.radius * 1000} options={options} />;\n    case 'rectangle':\n      return <Rectangle bounds={boundsToGoogleBounds(area.bounds)} options={options} />;\n    default:\n      throw new Error('Unsupported Area Type');\n  }\n};\n"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,MAAT,EAAiBC,SAAjB,QAAkC,mBAAlC;AAKA,SAASC,oBAAT,QAAqC,oBAArC;AAMA,IAAMC,OAAO,GAAG;EACdC,SAAS,EAAE,qBADG;EAEdC,WAAW,EAAE,iBAFC;EAGdC,YAAY,EAAE;AAHA,CAAhB;AAMA,OAAO,IAAMC,IAAsB,GAAG,SAAzBA,IAAyB,OAAc;EAAA,IAAXC,IAAW,QAAXA,IAAW;;EAClD,IAAI,CAACA,IAAL,EAAW;IACT,OAAO,IAAP;EACD;;EAED,QAAQA,IAAI,CAACC,IAAb;IACE,KAAK,QAAL;MACE,oBAAO,oBAAC,MAAD;QAAQ,MAAM,EAAED,IAAI,CAACE,MAArB;QAA6B,MAAM,EAAEF,IAAI,CAACG,MAAL,GAAc,IAAnD;QAAyD,OAAO,EAAER,OAAlE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAAP;;IACF,KAAK,WAAL;MACE,oBAAO,oBAAC,SAAD;QAAW,MAAM,EAAED,oBAAoB,CAACM,IAAI,CAACI,MAAN,CAAvC;QAAsD,OAAO,EAAET,OAA/D;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAAP;;IACF;MACE,MAAM,IAAIU,KAAJ,CAAU,uBAAV,CAAN;EANJ;AAQD,CAbM"},"metadata":{},"sourceType":"module"}