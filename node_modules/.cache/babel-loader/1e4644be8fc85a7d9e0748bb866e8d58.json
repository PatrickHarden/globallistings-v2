{"ast":null,"code":"import Loadable from 'react-loadable';\nimport { compose } from 'ramda';\nimport { fetchConfig } from '../../redux/actions/config';\nimport { LoadableLoader } from '../../components/loader/loader';\nimport { withValidation } from '../../components/validator/validator';\nimport { isPdpPath } from '../../redux/selectors/pdp';\nvar LoadableComponent = Loadable({\n  loader: function loader() {\n    return import(\n    /* webpackChunkName: \"PDP\" */\n    './pdp-container');\n  },\n  loading: LoadableLoader\n});\nvar validatePropertyAddress = withValidation({\n  isValid: function isValid() {\n    return true;\n  },\n  validate: fetchConfig\n});\n\nvar doNothing = function doNothing() {\n  return function (_, __) {\n    return Promise.resolve(undefined);\n  };\n};\n\nvar validatePdpUrl = withValidation({\n  isValid: isPdpPath,\n  validate: doNothing\n});\nexport default compose(validatePropertyAddress, validatePdpUrl)(LoadableComponent);","map":{"version":3,"names":["Loadable","compose","fetchConfig","LoadableLoader","withValidation","isPdpPath","LoadableComponent","loader","loading","validatePropertyAddress","isValid","validate","doNothing","_","__","Promise","resolve","undefined","validatePdpUrl"],"sources":["/Users/zentoo/Code/v2/src/views/pdp/loadable-pdp.tsx"],"sourcesContent":["import Loadable from 'react-loadable';\nimport { compose } from 'ramda';\n\nimport { fetchConfig } from '../../redux/actions/config';\n\nimport { LoadableLoader } from '../../components/loader/loader';\nimport { withValidation } from '../../components/validator/validator';\nimport { isPdpPath } from '../../redux/selectors/pdp';\nimport { State } from '../../types/state';\n\nconst LoadableComponent = Loadable({\n  loader: () => import(/* webpackChunkName: \"PDP\" */ './pdp-container'),\n  loading: LoadableLoader,\n});\n\nconst validatePropertyAddress = withValidation({\n  isValid: () => true,\n  validate: fetchConfig,\n});\n\nconst doNothing = () => (_: Function, __: () => State) => Promise.resolve(undefined);\n\nconst validatePdpUrl = withValidation({\n  isValid: isPdpPath,\n  validate: doNothing,\n});\n\nexport default compose(\n  validatePropertyAddress,\n  validatePdpUrl\n)(LoadableComponent);\n"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,gBAArB;AACA,SAASC,OAAT,QAAwB,OAAxB;AAEA,SAASC,WAAT,QAA4B,4BAA5B;AAEA,SAASC,cAAT,QAA+B,gCAA/B;AACA,SAASC,cAAT,QAA+B,sCAA/B;AACA,SAASC,SAAT,QAA0B,2BAA1B;AAGA,IAAMC,iBAAiB,GAAGN,QAAQ,CAAC;EACjCO,MAAM,EAAE;IAAA,OAAM;IAAO;IAA8B,iBAArC,CAAN;EAAA,CADyB;EAEjCC,OAAO,EAAEL;AAFwB,CAAD,CAAlC;AAKA,IAAMM,uBAAuB,GAAGL,cAAc,CAAC;EAC7CM,OAAO,EAAE;IAAA,OAAM,IAAN;EAAA,CADoC;EAE7CC,QAAQ,EAAET;AAFmC,CAAD,CAA9C;;AAKA,IAAMU,SAAS,GAAG,SAAZA,SAAY;EAAA,OAAM,UAACC,CAAD,EAAcC,EAAd;IAAA,OAAkCC,OAAO,CAACC,OAAR,CAAgBC,SAAhB,CAAlC;EAAA,CAAN;AAAA,CAAlB;;AAEA,IAAMC,cAAc,GAAGd,cAAc,CAAC;EACpCM,OAAO,EAAEL,SAD2B;EAEpCM,QAAQ,EAAEC;AAF0B,CAAD,CAArC;AAKA,eAAeX,OAAO,CACpBQ,uBADoB,EAEpBS,cAFoB,CAAP,CAGbZ,iBAHa,CAAf"},"metadata":{},"sourceType":"module"}