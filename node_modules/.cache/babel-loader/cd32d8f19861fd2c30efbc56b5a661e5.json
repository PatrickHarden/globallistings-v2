{"ast":null,"code":"import { createStandardAction } from 'typesafe-actions';\nimport { autocompleteSelector } from '../selectors/state';\nimport { updatePath } from './navigation';\nexport var selectedAutocompletionItem = createStandardAction('SELECT_AUTOCOMPLETION_ITEM')();\nexport var updateUrlWithSelectedLocation = function updateUrlWithSelectedLocation(placeId) {\n  return function (dispatch, getState) {\n    var place = autocompleteSelector(getState())[placeId];\n\n    if (!!place) {\n      dispatch(updatePath('location', place.description));\n    }\n  };\n};","map":{"version":3,"names":["createStandardAction","autocompleteSelector","updatePath","selectedAutocompletionItem","updateUrlWithSelectedLocation","placeId","dispatch","getState","place","description"],"sources":["/Users/zentoo/Code/v2/src/redux/actions/autocomplete.ts"],"sourcesContent":["import { createStandardAction } from 'typesafe-actions';\nimport { State } from '../../types/state';\nimport { autocompleteSelector } from '../selectors/state';\nimport { updatePath } from './navigation';\n\nexport const selectedAutocompletionItem = createStandardAction('SELECT_AUTOCOMPLETION_ITEM')<\n  string\n>();\n\nexport const updateUrlWithSelectedLocation = (placeId: string) => (\n  dispatch: Function,\n  getState: () => State\n) => {\n  const place = autocompleteSelector(getState())[placeId];\n  if (!!place) {\n    dispatch(updatePath('location', place.description));\n  }\n};\n"],"mappings":"AAAA,SAASA,oBAAT,QAAqC,kBAArC;AAEA,SAASC,oBAAT,QAAqC,oBAArC;AACA,SAASC,UAAT,QAA2B,cAA3B;AAEA,OAAO,IAAMC,0BAA0B,GAAGH,oBAAoB,CAAC,4BAAD,CAApB,EAAnC;AAIP,OAAO,IAAMI,6BAA6B,GAAG,SAAhCA,6BAAgC,CAACC,OAAD;EAAA,OAAqB,UAChEC,QADgE,EAEhEC,QAFgE,EAG7D;IACH,IAAMC,KAAK,GAAGP,oBAAoB,CAACM,QAAQ,EAAT,CAApB,CAAiCF,OAAjC,CAAd;;IACA,IAAI,CAAC,CAACG,KAAN,EAAa;MACXF,QAAQ,CAACJ,UAAU,CAAC,UAAD,EAAaM,KAAK,CAACC,WAAnB,CAAX,CAAR;IACD;EACF,CAR4C;AAAA,CAAtC"},"metadata":{},"sourceType":"module"}