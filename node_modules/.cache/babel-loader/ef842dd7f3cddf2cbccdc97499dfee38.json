{"ast":null,"code":"export var mapPrice = function mapPrice(p, intl) {\n  if (!p.charges) {\n    return undefined;\n  }\n\n  var rent = p.charges.find(function (c) {\n    return c.chargeKind === 'Rent';\n  });\n\n  if (!rent || !rent.amount) {\n    return intl.formatMessage({\n      id: 'PriceOnApplication'\n    });\n  }\n\n  var amount = rent.amount,\n      perUnit = rent.perUnit,\n      interval = rent.interval;\n\n  if (!amount || !perUnit || !interval) {\n    console.error(\"\".concat(p.id, \" has rent info missing defaulting to price on application\"));\n    return intl.formatMessage({\n      id: 'PriceOnApplication'\n    });\n  }\n\n  var amountStr = intl.formatNumber(rent.amount, {\n    style: 'currency',\n    currency: rent.currencyCode\n  });\n  var unitStr = intl.formatMessage({\n    id: perUnit\n  });\n  var intervalStr = intl.formatMessage({\n    id: interval\n  });\n  return \"\".concat(amountStr, \"/\").concat(unitStr, \"/\").concat(intervalStr);\n};","map":{"version":3,"names":["mapPrice","p","intl","charges","undefined","rent","find","c","chargeKind","amount","formatMessage","id","perUnit","interval","console","error","amountStr","formatNumber","style","currency","currencyCode","unitStr","intervalStr"],"sources":["/Users/zentoo/Code/v2/src/utils/propertyData/mapPrice.ts"],"sourcesContent":["import { InjectedIntl } from 'react-intl';\nimport { Property } from '../../types/property';\n\nexport const mapPrice = (p: Property, intl: InjectedIntl) => {\n  if (!p.charges) {\n    return undefined;\n  }\n  const rent = p.charges.find(c => c.chargeKind === 'Rent');\n  if (!rent || !rent.amount) {\n    return intl.formatMessage({ id: 'PriceOnApplication' });\n  }\n\n  const { amount, perUnit, interval } = rent;\n\n  if (!amount || !perUnit || !interval) {\n    console.error(`${p.id} has rent info missing defaulting to price on application`);\n    return intl.formatMessage({ id: 'PriceOnApplication' });\n  }\n\n  const amountStr = intl.formatNumber(rent.amount, {\n    style: 'currency',\n    currency: rent.currencyCode,\n  });\n  const unitStr = intl.formatMessage({ id: perUnit });\n  const intervalStr = intl.formatMessage({ id: interval });\n\n  return `${amountStr}/${unitStr}/${intervalStr}`;\n};\n"],"mappings":"AAGA,OAAO,IAAMA,QAAQ,GAAG,SAAXA,QAAW,CAACC,CAAD,EAAcC,IAAd,EAAqC;EAC3D,IAAI,CAACD,CAAC,CAACE,OAAP,EAAgB;IACd,OAAOC,SAAP;EACD;;EACD,IAAMC,IAAI,GAAGJ,CAAC,CAACE,OAAF,CAAUG,IAAV,CAAe,UAAAC,CAAC;IAAA,OAAIA,CAAC,CAACC,UAAF,KAAiB,MAArB;EAAA,CAAhB,CAAb;;EACA,IAAI,CAACH,IAAD,IAAS,CAACA,IAAI,CAACI,MAAnB,EAA2B;IACzB,OAAOP,IAAI,CAACQ,aAAL,CAAmB;MAAEC,EAAE,EAAE;IAAN,CAAnB,CAAP;EACD;;EAP0D,IASnDF,MATmD,GASrBJ,IATqB,CASnDI,MATmD;EAAA,IAS3CG,OAT2C,GASrBP,IATqB,CAS3CO,OAT2C;EAAA,IASlCC,QATkC,GASrBR,IATqB,CASlCQ,QATkC;;EAW3D,IAAI,CAACJ,MAAD,IAAW,CAACG,OAAZ,IAAuB,CAACC,QAA5B,EAAsC;IACpCC,OAAO,CAACC,KAAR,WAAiBd,CAAC,CAACU,EAAnB;IACA,OAAOT,IAAI,CAACQ,aAAL,CAAmB;MAAEC,EAAE,EAAE;IAAN,CAAnB,CAAP;EACD;;EAED,IAAMK,SAAS,GAAGd,IAAI,CAACe,YAAL,CAAkBZ,IAAI,CAACI,MAAvB,EAA+B;IAC/CS,KAAK,EAAE,UADwC;IAE/CC,QAAQ,EAAEd,IAAI,CAACe;EAFgC,CAA/B,CAAlB;EAIA,IAAMC,OAAO,GAAGnB,IAAI,CAACQ,aAAL,CAAmB;IAAEC,EAAE,EAAEC;EAAN,CAAnB,CAAhB;EACA,IAAMU,WAAW,GAAGpB,IAAI,CAACQ,aAAL,CAAmB;IAAEC,EAAE,EAAEE;EAAN,CAAnB,CAApB;EAEA,iBAAUG,SAAV,cAAuBK,OAAvB,cAAkCC,WAAlC;AACD,CAxBM"},"metadata":{},"sourceType":"module"}