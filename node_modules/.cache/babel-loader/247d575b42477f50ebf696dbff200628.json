{"ast":null,"code":"import _defineProperty from \"/Users/zentoo/Code/v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/zentoo/Code/v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'GEOCODE_SUCCESS':\n      return _objectSpread({}, state, _defineProperty({}, action.meta.hash, action.payload));\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"names":["state","action","type","meta","hash","payload"],"sources":["/Users/zentoo/Code/v2/src/redux/reducers/entities/geocode.ts"],"sourcesContent":["import { ActionType } from 'typesafe-actions';\nimport { createGeocodeSuccess } from '../../actions/geocode';\nimport { Dictionary } from '../../../types/common/dictionary';\nimport { Geocode } from '../../../types/state';\n\nexport type GeocodeActions = ActionType<typeof createGeocodeSuccess>;\n\nexport default (state: Dictionary<Geocode> = {}, action: GeocodeActions): Dictionary<Geocode> => {\n  switch (action.type) {\n    case 'GEOCODE_SUCCESS':\n      return { ...state, [action.meta.hash]: action.payload };\n    default:\n      return state;\n  }\n};\n"],"mappings":";;AAOA,gBAAe,YAAkF;EAAA,IAAjFA,KAAiF,uEAApD,EAAoD;EAAA,IAAhDC,MAAgD;;EAC/F,QAAQA,MAAM,CAACC,IAAf;IACE,KAAK,iBAAL;MACE,yBAAYF,KAAZ,sBAAoBC,MAAM,CAACE,IAAP,CAAYC,IAAhC,EAAuCH,MAAM,CAACI,OAA9C;;IACF;MACE,OAAOL,KAAP;EAJJ;AAMD,CAPD"},"metadata":{},"sourceType":"module"}