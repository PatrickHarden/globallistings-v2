{"ast":null,"code":"import _defineProperty from \"/Users/zentoo/Code/v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/zentoo/Code/v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { filtersSelector } from '../state';\nimport { createSelector } from 'reselect';\nimport { locationParamsSelector } from '../location';\nimport { FilterType } from '../../../types/config';\n\nvar getValidRangeOptions = function getValidRangeOptions(options, selectedOption, comparator) {\n  if (!selectedOption) {\n    return options;\n  }\n\n  return options.filter(function (_ref) {\n    var value = _ref.value;\n\n    // Allow default values\n    if (value === '') {\n      return true;\n    }\n\n    var a = parseInt(value, undefined);\n    var b = parseInt(selectedOption.value, undefined);\n\n    if (isNaN(a) || isNaN(b)) {\n      console.warn(\"\".concat(value, \" cannot be parsed to a valid integer therefore disabling of invalid range filter values will not work.\"));\n      return true;\n    }\n\n    return comparator(a, b);\n  });\n};\n\nvar filterOptionToQueryValue = function filterOptionToQueryValue(filterName, query) {\n  return function (f) {\n    return f.value === query[\"\".concat(filterName, \"_\").concat(f.type)];\n  };\n};\n\nvar findQueryValue = function findQueryValue(filterName, query, key) {\n  var keyObj = query[key];\n  return keyObj !== undefined ? keyObj[filterName] : query[filterName];\n};\n\nexport var filtersInfoSelector = createSelector(filtersSelector, locationParamsSelector, function (filters, query) {\n  return filters.filter(function (f) {\n    return [FilterType.range, FilterType.select].indexOf(f.type) > -1;\n  }).map(function (f) {\n    var queryValue = findQueryValue(f.name, query, 'params');\n\n    if (Array.isArray(queryValue)) {\n      throw new Error(\"query param \".concat(queryValue, \" must not be an array\"));\n    }\n\n    if (f.type === FilterType.select) {\n      var value = f.options.find(function (o) {\n        return o.value === queryValue;\n      });\n      return _objectSpread({}, f, {\n        items: f.options,\n        selectedItem: value\n      });\n    }\n\n    if (f.type === FilterType.range) {\n      var minValue = f.minValues.find(filterOptionToQueryValue(f.name, query));\n      var maxValue = f.maxValues.find(filterOptionToQueryValue(f.name, query));\n      var minValues = getValidRangeOptions(f.minValues, maxValue, function (a, b) {\n        return a <= b;\n      });\n      var maxValues = getValidRangeOptions(f.maxValues, minValue, function (a, b) {\n        return a >= b;\n      });\n      return {\n        range: FilterType.range,\n        type: f.type,\n        placement: f.placement,\n        label: f.label,\n        name: f.name,\n        modifier: f.modifier,\n        min: {\n          items: minValues,\n          selectedItem: minValue\n        },\n        max: {\n          items: maxValues,\n          selectedItem: maxValue\n        }\n      };\n    }\n\n    throw new Error('Unsupported filter type');\n  });\n});\nexport var defaultFiltersParamsSelectors = createSelector(filtersSelector, function (filters) {\n  return filters.map(function (f) {\n    if (f.type === FilterType.select) {\n      var defaultOption = f.options.find(function (o) {\n        return o.default;\n      });\n\n      if (!defaultOption) {\n        return {};\n      }\n\n      return _defineProperty({}, f.name, defaultOption.value);\n    } // TODO add support for range filters\n\n\n    return {};\n  }).reduce(function (prev, curr) {\n    return _objectSpread({}, prev, curr);\n  }, {});\n});","map":{"version":3,"names":["filtersSelector","createSelector","locationParamsSelector","FilterType","getValidRangeOptions","options","selectedOption","comparator","filter","value","a","parseInt","undefined","b","isNaN","console","warn","filterOptionToQueryValue","filterName","query","f","type","findQueryValue","key","keyObj","filtersInfoSelector","filters","range","select","indexOf","map","queryValue","name","Array","isArray","Error","find","o","items","selectedItem","minValue","minValues","maxValue","maxValues","placement","label","modifier","min","max","defaultFiltersParamsSelectors","defaultOption","default","reduce","prev","curr"],"sources":["/Users/zentoo/Code/v2/src/redux/selectors/config/filters.ts"],"sourcesContent":["import { filtersSelector } from '../state';\nimport { createSelector } from 'reselect';\n\nimport { querySelector, locationParamsSelector } from '../location';\nimport { FilterOption, FilterType, BaseFilter } from '../../../types/config';\nimport { Dictionary } from '../../../types/common/dictionary';\n\nexport interface SelectInfo {\n  readonly items: FilterOption[];\n  readonly selectedItem?: FilterOption;\n}\n\nexport interface SelectFilterInfo extends BaseFilter, SelectInfo {\n  readonly type: FilterType.select;\n}\n\nexport interface RangeFilterInfo extends BaseFilter {\n  readonly type: FilterType.range;\n  readonly min: SelectInfo;\n  readonly max: SelectInfo;\n}\n\nexport type FilterInfo = SelectFilterInfo | RangeFilterInfo;\n\nconst getValidRangeOptions = (\n  options: FilterOption[],\n  selectedOption: FilterOption | undefined,\n  comparator: (a: number, b: number) => boolean\n) => {\n  if (!selectedOption) {\n    return options;\n  }\n\n  return options.filter(({ value }) => {\n    // Allow default values\n    if (value === '') {\n      return true;\n    }\n    const a = parseInt(value, undefined);\n    const b = parseInt(selectedOption.value, undefined);\n    if (isNaN(a) || isNaN(b)) {\n      console.warn(\n        `${value} cannot be parsed to a valid integer therefore disabling of invalid range filter values will not work.`\n      );\n      return true;\n    }\n    return comparator(a, b);\n  });\n};\n\nconst filterOptionToQueryValue = (filterName: string, query: any) => (f: FilterOption) =>\n  f.value === query[`${filterName}_${f.type}`];\n\nconst findQueryValue = (filterName: string, query: any, key: string) => {\n  const keyObj = query[key];\n  return keyObj !== undefined ? keyObj[filterName] : query[filterName];\n};\n\nexport const filtersInfoSelector = createSelector(\n  filtersSelector,\n  locationParamsSelector,\n  (filters, query): FilterInfo[] =>\n    filters\n      .filter(f => [FilterType.range, FilterType.select].indexOf(f.type) > -1)\n      .map(f => {\n        const queryValue = findQueryValue(f.name, query, 'params');\n        if (Array.isArray(queryValue)) {\n          throw new Error(`query param ${queryValue} must not be an array`);\n        }\n\n        if (f.type === FilterType.select) {\n          const value = f.options.find(o => o.value === queryValue);\n          return {\n            ...f,\n            items: f.options,\n            selectedItem: value,\n          };\n        }\n        if (f.type === FilterType.range) {\n          const minValue = f.minValues.find(filterOptionToQueryValue(f.name, query));\n          const maxValue = f.maxValues.find(filterOptionToQueryValue(f.name, query));\n          const minValues = getValidRangeOptions(f.minValues, maxValue, (a, b) => a <= b);\n          const maxValues = getValidRangeOptions(f.maxValues, minValue, (a, b) => a >= b);\n\n          return {\n            range: FilterType.range,\n            type: f.type,\n            placement: f.placement,\n            label: f.label,\n            name: f.name,\n            modifier: f.modifier,\n            min: {\n              items: minValues,\n              selectedItem: minValue,\n            },\n            max: {\n              items: maxValues,\n              selectedItem: maxValue,\n            },\n          };\n        }\n\n        throw new Error('Unsupported filter type');\n      })\n);\n\nexport const defaultFiltersParamsSelectors = createSelector(\n  filtersSelector,\n  (filters): Dictionary<string> =>\n    filters\n      .map(f => {\n        if (f.type === FilterType.select) {\n          const defaultOption = f.options.find(o => o.default);\n          if (!defaultOption) {\n            return {};\n          }\n          return { [f.name]: defaultOption.value };\n        }\n        // TODO add support for range filters\n        return {};\n      })\n      .reduce((prev, curr) => ({ ...prev, ...curr }), {})\n);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}