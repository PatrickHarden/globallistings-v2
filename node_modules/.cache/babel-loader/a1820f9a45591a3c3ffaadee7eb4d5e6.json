{"ast":null,"code":"import { handlePendingState, handleSuccessState, handleErrorState } from './shared/meta-reducers';\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'GEOCODE_REQUEST':\n      return handlePendingState(state, action);\n\n    case 'GEOCODE_SUCCESS':\n      return handleSuccessState(state, action);\n\n    case 'GEOCODE_FAILURE':\n      return handleErrorState(state, action);\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"names":["handlePendingState","handleSuccessState","handleErrorState","state","action","type"],"sources":["/Users/zentoo/Code/v2/src/redux/reducers/entitiesMeta/geocode.ts"],"sourcesContent":["import { ActionType } from 'typesafe-actions';\nimport * as geocodeActions from '../../actions/geocode';\nimport { handlePendingState, handleSuccessState, handleErrorState } from './shared/meta-reducers';\n\nexport type GeocodeActions = ActionType<typeof geocodeActions>;\n\nexport default (state = {}, action: GeocodeActions) => {\n  switch (action.type) {\n    case 'GEOCODE_REQUEST':\n      return handlePendingState(state, action);\n    case 'GEOCODE_SUCCESS':\n      return handleSuccessState(state, action);\n    case 'GEOCODE_FAILURE':\n      return handleErrorState(state, action);\n    default:\n      return state;\n  }\n};\n"],"mappings":"AAEA,SAASA,kBAAT,EAA6BC,kBAA7B,EAAiDC,gBAAjD,QAAyE,wBAAzE;AAIA,gBAAe,YAAwC;EAAA,IAAvCC,KAAuC,uEAA/B,EAA+B;EAAA,IAA3BC,MAA2B;;EACrD,QAAQA,MAAM,CAACC,IAAf;IACE,KAAK,iBAAL;MACE,OAAOL,kBAAkB,CAACG,KAAD,EAAQC,MAAR,CAAzB;;IACF,KAAK,iBAAL;MACE,OAAOH,kBAAkB,CAACE,KAAD,EAAQC,MAAR,CAAzB;;IACF,KAAK,iBAAL;MACE,OAAOF,gBAAgB,CAACC,KAAD,EAAQC,MAAR,CAAvB;;IACF;MACE,OAAOD,KAAP;EARJ;AAUD,CAXD"},"metadata":{},"sourceType":"module"}