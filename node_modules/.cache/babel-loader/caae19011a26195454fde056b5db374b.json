{"ast":null,"code":"import _defineProperty from \"/Users/zentoo/Code/v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/zentoo/Code/v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/zentoo/Code/v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/zentoo/Code/v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/zentoo/Code/v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/zentoo/Code/v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/zentoo/Code/v2/src/views/search/search-container.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { buyButtonInfoSelector, locationLookupSuggestionsSelector } from '../../redux/selectors/search';\nimport { letButtonInfoSelector } from '../../redux/selectors/search';\nimport { messagesSelector } from '../../redux/selectors/state';\nimport { searchModeSelector, searchBiasSelector, searchRadiusRestrictionSelector, searchCountryRestrictionSelector, getSearchHeader, searchResultsPageSelector, searchPathSelectorSelector, searchSuggestDebounceSelector, paramsSelector, searchPathSortAlphabeticalSelector, polygonSelector } from '../../redux/selectors/config/config';\nimport { primaryFiltersSelector, secondaryFiltersSelector } from '../../redux/selectors/view-filters';\nimport { setSearchLocation, changeSearchFilter as _changeSearchFilter } from '../../redux/actions/search';\nimport { lookupPlaceByName } from '../../redux/actions/autocomplete-request';\nimport { lookupByPropertyId } from '../../redux/actions/property-request';\nimport { Search } from './search';\nimport { selectedAutocompletionItem } from '../../redux/actions/autocomplete';\nimport { renderComplete as _renderComplete } from '../../redux/actions/render';\nimport { siteTypeSelector } from '../../redux/selectors/config/config';\nexport var SearchContainer = /*#__PURE__*/function (_React$Component) {\n  _inherits(SearchContainer, _React$Component);\n\n  var _super = _createSuper(SearchContainer);\n\n  function SearchContainer() {\n    _classCallCheck(this, SearchContainer);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SearchContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.renderComplete();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(Search, Object.assign({}, this.props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 12\n        }\n      }));\n    }\n  }]);\n\n  return SearchContainer;\n}(React.Component);\nexport var mapStateToProps = function mapStateToProps(state) {\n  return {\n    params: paramsSelector(state),\n    biasRadius: searchRadiusRestrictionSelector(state),\n    buyButtonInfo: buyButtonInfoSelector(state),\n    language: messagesSelector(state),\n    letButtonInfo: letButtonInfoSelector(state),\n    restrictToCountry: searchCountryRestrictionSelector(state),\n    searchBias: searchBiasSelector(state),\n    searchHeader: getSearchHeader(state),\n    searchMode: searchModeSelector(state),\n    searchResultsPage: searchResultsPageSelector(state),\n    suggestions: locationLookupSuggestionsSelector(state),\n    searchPathSelectors: searchPathSelectorSelector(state),\n    primaryFilters: primaryFiltersSelector(state),\n    secondaryFilters: secondaryFiltersSelector(state),\n    searchSuggestDebounce: searchSuggestDebounceSelector(state),\n    searchPathSortAlphabeticalSelector: searchPathSortAlphabeticalSelector(state),\n    polygons: polygonSelector(state),\n    siteType: siteTypeSelector(state)\n  };\n};\nexport var mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    changePlaceSearch: function changePlaceSearch(searchTerm) {\n      return dispatch(lookupPlaceByName(searchTerm));\n    },\n    changePropertySearch: function changePropertySearch(searchTerm) {\n      return dispatch(lookupByPropertyId(searchTerm));\n    },\n    changeSearchFilter: function changeSearchFilter(key) {\n      return function (value) {\n        return dispatch(_changeSearchFilter(_defineProperty({}, key, value)));\n      };\n    },\n    setSearchLocation: function setSearchLocation(searchLocation) {\n      return dispatch(selectedAutocompletionItem(searchLocation));\n    },\n    updateSearchPath: function updateSearchPath(searchPath) {\n      return dispatch(setSearchLocation(searchPath));\n    },\n    renderComplete: function renderComplete() {\n      return dispatch(_renderComplete());\n    }\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchContainer);","map":{"version":3,"names":["React","connect","buyButtonInfoSelector","locationLookupSuggestionsSelector","letButtonInfoSelector","messagesSelector","searchModeSelector","searchBiasSelector","searchRadiusRestrictionSelector","searchCountryRestrictionSelector","getSearchHeader","searchResultsPageSelector","searchPathSelectorSelector","searchSuggestDebounceSelector","paramsSelector","searchPathSortAlphabeticalSelector","polygonSelector","primaryFiltersSelector","secondaryFiltersSelector","setSearchLocation","changeSearchFilter","lookupPlaceByName","lookupByPropertyId","Search","selectedAutocompletionItem","renderComplete","siteTypeSelector","SearchContainer","props","Component","mapStateToProps","state","params","biasRadius","buyButtonInfo","language","letButtonInfo","restrictToCountry","searchBias","searchHeader","searchMode","searchResultsPage","suggestions","searchPathSelectors","primaryFilters","secondaryFilters","searchSuggestDebounce","polygons","siteType","mapDispatchToProps","dispatch","changePlaceSearch","searchTerm","changePropertySearch","key","value","searchLocation","updateSearchPath","searchPath"],"sources":["/Users/zentoo/Code/v2/src/views/search/search-container.tsx"],"sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  buyButtonInfoSelector,\n  ButtonInfo,\n  locationLookupSuggestionsSelector,\n  AutocompleteSuggestion,\n} from '../../redux/selectors/search';\nimport { letButtonInfoSelector } from '../../redux/selectors/search';\nimport { messagesSelector } from '../../redux/selectors/state';\nimport {\n  searchModeSelector,\n  searchBiasSelector,\n  searchRadiusRestrictionSelector,\n  searchCountryRestrictionSelector,\n  getSearchHeader,\n  searchResultsPageSelector,\n  searchPathSelectorSelector,\n  searchSuggestDebounceSelector,\n  paramsSelector,\n  searchPathSortAlphabeticalSelector,\n  polygonSelector,\n} from '../../redux/selectors/config/config';\nimport { FilterInfo } from '../../redux/selectors/config/filters';\nimport {\n  primaryFiltersSelector,\n  secondaryFiltersSelector,\n} from '../../redux/selectors/view-filters';\n\nimport {\n  setSearchLocation,\n  changeSearchFilter\n} from '../../redux/actions/search';\nimport { lookupPlaceByName } from '../../redux/actions/autocomplete-request';\nimport { lookupByPropertyId } from '../../redux/actions/property-request';\n\nimport { State } from '../../types/state';\nimport { SearchPath, SearchBias, SearchHeader, Params, Polygon } from '../../types/config';\nimport { Dictionary } from '../../types/common/dictionary';\n\nimport { Search } from './search';\nimport { selectedAutocompletionItem } from '../../redux/actions/autocomplete';\nimport { renderComplete } from '../../redux/actions/render';\nimport { siteTypeSelector } from '../../redux/selectors/config/config';\n\nexport interface StateProps {\n  readonly params: Params;\n  readonly biasRadius?: number;\n  readonly buyButtonInfo: ButtonInfo;\n  readonly language: Dictionary<string>;\n  readonly letButtonInfo: ButtonInfo;\n  readonly restrictToCountry?: string;\n  readonly searchBias?: SearchBias;\n  readonly searchHeader: SearchHeader;\n  readonly searchMode: string;\n  readonly searchResultsPage: string;\n  readonly suggestions: AutocompleteSuggestion[];\n  readonly searchPathSelectors?: SearchPath[];\n  readonly primaryFilters: FilterInfo[];\n  readonly secondaryFilters: FilterInfo[];\n  readonly searchSuggestDebounce?: number;\n  readonly searchPathSortAlphabeticalSelector?: boolean;\n  readonly polygons?: Polygon[];\n  readonly siteType: string\n}\n\nexport interface DispatchProps {\n  readonly changePlaceSearch: (searchTerm: string) => void;\n  readonly changePropertySearch: (searchTerm: string) => void;\n  readonly renderComplete: () => void;\n  readonly changeSearchFilter: (key: string) => (value: string) => void;\n  readonly setSearchLocation: (searchLocation: string) => void;\n  readonly updateSearchPath: (searchPath: string) => void;\n}\n\ntype Props = StateProps & DispatchProps;\n\nexport class SearchContainer extends React.Component<Props> {\n  public componentDidMount() {\n    this.props.renderComplete();\n  }\n\n  public render() {\n    return <Search {...this.props} />;\n  }\n}\n\nexport const mapStateToProps = (state: State): StateProps => ({\n  params: paramsSelector(state),\n  biasRadius: searchRadiusRestrictionSelector(state),\n  buyButtonInfo: buyButtonInfoSelector(state),\n  language: messagesSelector(state),\n  letButtonInfo: letButtonInfoSelector(state),\n  restrictToCountry: searchCountryRestrictionSelector(state),\n  searchBias: searchBiasSelector(state),\n  searchHeader: getSearchHeader(state),\n  searchMode: searchModeSelector(state),\n  searchResultsPage: searchResultsPageSelector(state),\n  suggestions: locationLookupSuggestionsSelector(state),\n  searchPathSelectors: searchPathSelectorSelector(state),\n  primaryFilters: primaryFiltersSelector(state),\n  secondaryFilters: secondaryFiltersSelector(state),\n  searchSuggestDebounce: searchSuggestDebounceSelector(state),\n  searchPathSortAlphabeticalSelector: searchPathSortAlphabeticalSelector(state),\n  polygons: polygonSelector(state),\n  siteType: siteTypeSelector(state)\n});\n\nexport const mapDispatchToProps = (dispatch: Function): DispatchProps => ({\n  changePlaceSearch: searchTerm => dispatch(lookupPlaceByName(searchTerm)),\n  changePropertySearch: searchTerm => dispatch(lookupByPropertyId(searchTerm)),\n  changeSearchFilter: key => value => dispatch(changeSearchFilter({ [key]: value })),\n  setSearchLocation: searchLocation => dispatch(selectedAutocompletionItem(searchLocation)),\n  updateSearchPath: searchPath => dispatch(setSearchLocation(searchPath)),\n  renderComplete: () => dispatch(renderComplete())\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SearchContainer);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}