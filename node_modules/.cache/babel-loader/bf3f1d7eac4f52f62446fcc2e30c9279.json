{"ast":null,"code":"export function isConfigObject(config) {\n  return typeof config !== 'string';\n}","map":{"version":3,"names":["isConfigObject","config"],"sources":["/Users/zentoo/Code/v2/src/types/state.ts"],"sourcesContent":["import { RouterState } from 'connected-react-router';\nimport { Dictionary } from './common/dictionary';\nimport { Property } from './property';\nimport { Config, AppConfig } from './config';\nimport { UI } from './ui';\nimport { Autocomplete } from './autocomplete';\n\nexport interface State {\n  readonly entities: Entities;\n  readonly entitiesMeta: EntitiesMeta;\n  readonly router: RouterState;\n  readonly ui: UI;\n}\n\nexport interface EntitiesMeta {\n  readonly propertySearches: Dictionary<EntityMeta>;\n  readonly geocode: Dictionary<EntityMeta>;\n  readonly autocompleteSearches: Dictionary<EntityMeta>;\n  readonly config: EntityMeta;\n}\n\nexport type LoadStatus = 'PENDING' | 'ERROR' | 'SUCCESS' | 'NONE';\n\nexport interface EntityMeta {\n  readonly status: LoadStatus;\n}\n\nexport interface LatLng {\n  readonly lat: number;\n  readonly lng: number;\n}\n\nexport interface Bounds {\n  readonly sw: LatLng;\n  readonly ne: LatLng;\n}\n\nexport interface Geocode {\n  readonly bounds: Bounds;\n  readonly center: LatLng;\n}\n\nexport interface Entities {\n  readonly properties: Dictionary<Property>;\n  readonly propertySearches: Dictionary<string[]>;\n  readonly autocomplete: Dictionary<Autocomplete>;\n  readonly autocompleteSearches: string[];\n  readonly geocode: Dictionary<Geocode>;\n  readonly config: AppConfig;\n}\n\nexport function isConfigObject(config: string | Config): config is Config {\n  return typeof config !== 'string';\n}\n"],"mappings":"AAmDA,OAAO,SAASA,cAAT,CAAwBC,MAAxB,EAAmE;EACxE,OAAO,OAAOA,MAAP,KAAkB,QAAzB;AACD"},"metadata":{},"sourceType":"module"}