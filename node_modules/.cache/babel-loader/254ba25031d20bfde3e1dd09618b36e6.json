{"ast":null,"code":"import _objectSpread from \"/Users/zentoo/Code/v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'GET_SUGGESTIONS_SUCCESS':\n      return _objectSpread({}, state, action.payload.entities.suggestions);\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"names":["state","action","type","payload","entities","suggestions"],"sources":["/Users/zentoo/Code/v2/src/redux/reducers/entities/autocomplete.ts"],"sourcesContent":["import { ActionType } from 'typesafe-actions';\nimport { suggestionsSuccess } from '../../actions/autocomplete-request';\nimport { Dictionary } from '../../../types/common/dictionary';\nimport { Autocomplete } from '../../../types/autocomplete';\n\nexport type GeocodeActions = ActionType<typeof suggestionsSuccess>;\n\nexport default (\n  state: Dictionary<Autocomplete> = {},\n  action: GeocodeActions\n): Dictionary<Autocomplete> => {\n  switch (action.type) {\n    case 'GET_SUGGESTIONS_SUCCESS':\n      return { ...state, ...action.payload.entities.suggestions };\n    default:\n      return state;\n  }\n};\n"],"mappings":";AAOA,gBAAe,YAGgB;EAAA,IAF7BA,KAE6B,uEAFK,EAEL;EAAA,IAD7BC,MAC6B;;EAC7B,QAAQA,MAAM,CAACC,IAAf;IACE,KAAK,yBAAL;MACE,yBAAYF,KAAZ,EAAsBC,MAAM,CAACE,OAAP,CAAeC,QAAf,CAAwBC,WAA9C;;IACF;MACE,OAAOL,KAAP;EAJJ;AAMD,CAVD"},"metadata":{},"sourceType":"module"}