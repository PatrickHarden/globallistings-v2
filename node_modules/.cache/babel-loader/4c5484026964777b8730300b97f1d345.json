{"ast":null,"code":"import { handleError, handleSuccess, handlePending } from './shared/meta-reducers';\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'FETCH_CONFIG_REQUEST':\n      return handlePending();\n\n    case 'FETCH_CONFIG_SUCCESS':\n      return handleSuccess(action);\n\n    case 'FETCH_CONFIG_FAILURE':\n      return handleError(action);\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"names":["handleError","handleSuccess","handlePending","state","action","type"],"sources":["/Users/zentoo/Code/v2/src/redux/reducers/entitiesMeta/config.ts"],"sourcesContent":["import * as actions from '../../actions/config';\nimport { ActionType } from 'typesafe-actions';\nimport { handleError, handleSuccess, handlePending } from './shared/meta-reducers';\n\nexport type Actions = ActionType<typeof actions>;\n\nexport default (state = {}, action: Actions) => {\n  switch (action.type) {\n    case 'FETCH_CONFIG_REQUEST':\n      return handlePending();\n    case 'FETCH_CONFIG_SUCCESS':\n      return handleSuccess(action);\n    case 'FETCH_CONFIG_FAILURE':\n      return handleError(action);\n    default:\n      return state;\n  }\n};\n"],"mappings":"AAEA,SAASA,WAAT,EAAsBC,aAAtB,EAAqCC,aAArC,QAA0D,wBAA1D;AAIA,gBAAe,YAAiC;EAAA,IAAhCC,KAAgC,uEAAxB,EAAwB;EAAA,IAApBC,MAAoB;;EAC9C,QAAQA,MAAM,CAACC,IAAf;IACE,KAAK,sBAAL;MACE,OAAOH,aAAa,EAApB;;IACF,KAAK,sBAAL;MACE,OAAOD,aAAa,CAACG,MAAD,CAApB;;IACF,KAAK,sBAAL;MACE,OAAOJ,WAAW,CAACI,MAAD,CAAlB;;IACF;MACE,OAAOD,KAAP;EARJ;AAUD,CAXD"},"metadata":{},"sourceType":"module"}