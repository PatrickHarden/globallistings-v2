{"ast":null,"code":"import _slicedToArray from \"/Users/zentoo/Code/v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { path, map, compose, prop, find, propEq, composeWith, isNil, chain } from 'ramda';\nvar key = prop('Common.PrimaryKey');\nvar safeCompose = composeWith(function (f, res) {\n  return isNil(res) ? res : f(res);\n});\n\nvar safeComposeAndLog = function safeComposeAndLog() {\n  var msg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'unknown';\n  return composeWith(function (f, res) {\n    if (isNil(res)) {\n      // TODO better error handling\n      console.error(msg);\n      return res;\n    }\n\n    return f(res);\n  });\n};\n\nvar composeAndLog = function composeAndLog(propertyName, doc) {\n  return safeComposeAndLog(\"Failed to map \\\"\".concat(propertyName, \"\\\" for property with id: \").concat(key(doc)));\n};\n\nvar getItemForLocale = function getItemForLocale(locale) {\n  return find(function (h) {\n    return h['Common.CultureCode'] === locale;\n  });\n};\n\nvar mapAddress = function mapAddress(address) {\n  if (!address) {\n    throw new Error('Address must be present on the property');\n  }\n\n  return {\n    Country: address['Common.Country'],\n    Line1: address['Common.Line1'],\n    Line2: address['Common.Line2'],\n    Locality: address['Common.Locallity'],\n    PostCode: address['Common.PostCode']\n  };\n};\n\nvar docToAddress = function docToAddress(doc) {\n  return mapAddress(doc['Common.ActualAddress']);\n};\n\nvar docToNumberOfBedrooms = function docToNumberOfBedrooms(doc) {\n  return doc['Common.NumberOfBedrooms'];\n};\n\nvar mapLocation = function mapLocation(location) {\n  if (!location) {\n    throw new Error('Property must have a location defined');\n  }\n\n  var _location = _slicedToArray(location, 2),\n      lat = _location[0],\n      lon = _location[1];\n\n  return {\n    lat: lat,\n    lon: lon\n  };\n};\n\nvar docToLocation = function docToLocation(doc) {\n  return compose(mapLocation, path(['Common.GeoLocation', 'geometry', 'coordinates']))(doc);\n};\n\nvar mapContact = function mapContact(contact) {\n  return {\n    phone: contact['Common.EmailAddress'],\n    email: contact['Common.TelephoneNumber'],\n    name: contact['Common.AgentName']\n  };\n};\n\nvar docToContacts = function docToContacts(doc) {\n  return composeAndLog('Common.ContactGroup', doc)([map(mapContact), path(['Common.ContactGroup', 'Common.Contacts'])])(doc);\n};\n\nvar docToHighlights = function docToHighlights(locale) {\n  return function (doc) {\n    return composeAndLog('Common.Highlights', doc)([map(prop('Common.Text')), compose(map(getItemForLocale(locale)), map(prop('Common.Highlight'))), prop('Common.Highlights')])(doc);\n  };\n};\n\nvar docToStrapline = function docToStrapline(locale) {\n  return safeCompose([prop('Common.Text'), getItemForLocale(locale), prop('Common.Strapline')]);\n};\n\nvar docToLongDescription = function docToLongDescription(locale) {\n  return safeCompose([prop('Common.Text'), getItemForLocale(locale), prop('Common.LongDescription')]);\n};\n\nvar mapEnergyPerformance = safeCompose([map(prop('Common.Uri')), prop('Common.EnergyPerformanceInformation')]);\nvar mapFloorPlans = safeCompose([map(prop('Common.Resource.Uri')), chain(function (p) {\n  return p['Common.ImageResources'];\n}), prop('Common.FloorPlans')]);\n\nvar getImgUri = function getImgUri(size) {\n  return compose(function (img) {\n    return img['Common.Resource.Uri'];\n  }, find(propEq('Common.Breakpoint', size)));\n};\n\nvar mapToImg = safeCompose([function (imgs) {\n  return {\n    small: getImgUri('small')(imgs),\n    large: getImgUri('large')(imgs)\n  };\n}, prop('Common.ImageResources')]);\nvar mapPhotos = safeCompose([map(mapToImg), prop('Common.Photos')]);\nvar getHeroPhoto = compose(mapToImg, prop('Dynamic.PrimaryImage'));\n\nvar mapCommonChargeToCharge = function mapCommonChargeToCharge(commonCharge) {\n  return {\n    currencyCode: commonCharge['Common.CurrencyCode'],\n    year: commonCharge['Common.Year'],\n    perUnit: commonCharge['Common.PerUnit'],\n    amountKind: commonCharge['Common.AmountKind'],\n    taxModifier: commonCharge['Common.TaxModifer'],\n    interval: commonCharge['Common.Interval'],\n    amount: commonCharge['Common.Amount'],\n    chargeKind: commonCharge['Common.ChargeKind'],\n    onApplication: commonCharge['Common.OnApplication'],\n    chargeModifier: commonCharge['Common.ChargeModifer']\n  };\n};\n\nvar docToCharges = safeCompose([map(mapCommonChargeToCharge), prop('Common.Charges')]); // TODO add tests for missing min size and max size\n\nvar docToSizeRange = function docToSizeRange(doc) {\n  if (!doc['Common.Sizes']) {\n    return undefined;\n  }\n\n  var minSize = doc['Common.Sizes'].find(function (s) {\n    return s['Common.SizeKind'] === 'MinimumSize';\n  });\n  var maxSize = doc['Common.Sizes'].find(function (s) {\n    return s['Common.SizeKind'] === 'TotalSize';\n  });\n\n  if (!minSize || !maxSize) {\n    return undefined;\n  }\n\n  var minSizeValue = minSize['Common.Dimensions'][0];\n  var maxSizeValue = maxSize['Common.Dimensions'][0];\n  return {\n    min: {\n      amount: minSizeValue['Common.Amount'],\n      units: minSizeValue['Common.DimensionsUnits']\n    },\n    max: {\n      amount: maxSizeValue['Common.Amount'],\n      units: maxSizeValue['Common.DimensionsUnits']\n    }\n  };\n};\n\nvar mapId = function mapId(doc) {\n  return doc['Common.PrimaryKey'];\n};\n\nexport var docToProperty = function docToProperty(locale) {\n  return function (doc) {\n    try {\n      return {\n        address: docToAddress(doc),\n        numberOfBedrooms: docToNumberOfBedrooms(doc),\n        location: docToLocation(doc),\n        contacts: docToContacts(doc),\n        highlights: docToHighlights(locale)(doc),\n        description: {\n          strapline: docToStrapline(locale)(doc),\n          longDescription: docToLongDescription(locale)(doc)\n        },\n        info: {\n          energyPerformance: mapEnergyPerformance(doc),\n          floorPlans: mapFloorPlans(doc)\n        },\n        photos: {\n          hero: getHeroPhoto(doc),\n          main: mapPhotos(doc)\n        },\n        charges: docToCharges(doc),\n        id: mapId(doc),\n        size: docToSizeRange(doc)\n      };\n    } catch (ex) {\n      console.error(\"Failed mapping property: \".concat(mapId(doc)));\n      console.error(ex);\n      return undefined;\n    }\n  };\n};","map":{"version":3,"names":["path","map","compose","prop","find","propEq","composeWith","isNil","chain","key","safeCompose","f","res","safeComposeAndLog","msg","console","error","composeAndLog","propertyName","doc","getItemForLocale","locale","h","mapAddress","address","Error","Country","Line1","Line2","Locality","PostCode","docToAddress","docToNumberOfBedrooms","mapLocation","location","lat","lon","docToLocation","mapContact","contact","phone","email","name","docToContacts","docToHighlights","docToStrapline","docToLongDescription","mapEnergyPerformance","mapFloorPlans","p","getImgUri","size","img","mapToImg","imgs","small","large","mapPhotos","getHeroPhoto","mapCommonChargeToCharge","commonCharge","currencyCode","year","perUnit","amountKind","taxModifier","interval","amount","chargeKind","onApplication","chargeModifier","docToCharges","docToSizeRange","undefined","minSize","s","maxSize","minSizeValue","maxSizeValue","min","units","max","mapId","docToProperty","numberOfBedrooms","contacts","highlights","description","strapline","longDescription","info","energyPerformance","floorPlans","photos","hero","main","charges","id","ex"],"sources":["/Users/zentoo/Code/v2/src/api/normalisers/doc-to-property-mapper.ts"],"sourcesContent":["import { path, map, compose, prop, find, propEq, composeWith, isNil, chain } from 'ramda';\nimport { Maybe } from '../../types/common/maybe';\nimport { Hero, Charge, SizeRange, Property } from '../../types/property';\n\nconst key = prop('Common.PrimaryKey');\nconst safeCompose = composeWith((f: any, res: any) => (isNil(res) ? res : f(res)));\n\nconst safeComposeAndLog = (msg = 'unknown') =>\n  composeWith((f: any, res: any) => {\n    if (isNil(res)) {\n      // TODO better error handling\n      console.error(msg);\n      return res;\n    }\n    return f(res);\n  });\n\nconst composeAndLog = (propertyName: string, doc: Document) =>\n  safeComposeAndLog(`Failed to map \"${propertyName}\" for property with id: ${key(doc)}`);\n\nconst getItemForLocale = (locale: string) => find(h => h['Common.CultureCode'] === locale);\n\nconst mapAddress = (address: CommonAddress | undefined) => {\n  if (!address) {\n    throw new Error('Address must be present on the property');\n  }\n  return {\n    Country: address['Common.Country'],\n    Line1: address['Common.Line1'],\n    Line2: address['Common.Line2'],\n    Locality: address['Common.Locallity'],\n    PostCode: address['Common.PostCode'],\n  };\n};\n\nconst docToAddress = (doc: Document) => mapAddress(doc['Common.ActualAddress']);\n\nconst docToNumberOfBedrooms = (doc: Document) => doc['Common.NumberOfBedrooms'];\n\nconst mapLocation = (location: number[] | undefined) => {\n  if (!location) {\n    throw new Error('Property must have a location defined');\n  }\n  const [lat, lon] = location;\n  return { lat, lon };\n};\n\nconst docToLocation = (doc: Document) =>\n  compose(\n    mapLocation,\n    path(['Common.GeoLocation', 'geometry', 'coordinates'])\n  )(doc);\n\nconst mapContact = (contact: CommonContact) => ({\n  phone: contact['Common.EmailAddress'],\n  email: contact['Common.TelephoneNumber'],\n  name: contact['Common.AgentName'],\n});\n\nconst docToContacts = (doc: Document) =>\n  composeAndLog('Common.ContactGroup', doc)([\n    map(mapContact),\n    path(['Common.ContactGroup', 'Common.Contacts']),\n  ])(doc);\n\nconst docToHighlights = (locale: string) => (doc: Document) =>\n  composeAndLog('Common.Highlights', doc)([\n    map(prop('Common.Text')),\n    compose(\n      map(getItemForLocale(locale)),\n      map(prop('Common.Highlight'))\n    ),\n    prop('Common.Highlights'),\n  ])(doc);\n\nconst docToStrapline = (locale: string) =>\n  safeCompose([prop('Common.Text'), getItemForLocale(locale), prop('Common.Strapline')]);\n\nconst docToLongDescription = (locale: string) =>\n  safeCompose([prop('Common.Text'), getItemForLocale(locale), prop('Common.LongDescription')]);\n\nconst mapEnergyPerformance = safeCompose([\n  map(prop('Common.Uri')),\n  prop('Common.EnergyPerformanceInformation'),\n]);\n\nconst mapFloorPlans = safeCompose([\n  map(prop('Common.Resource.Uri')),\n  chain((p: DynamicPrimaryImage) => p['Common.ImageResources']),\n  prop('Common.FloorPlans'),\n]);\n\ntype ImageSize = 'small' | 'large';\n\nconst getImgUri = (size: ImageSize) =>\n  compose(\n    (img: CommonImageResource) => img['Common.Resource.Uri'],\n    find(propEq('Common.Breakpoint', size))\n  );\n\nconst mapToImg = safeCompose([\n  (imgs: CommonImageResource[]) => ({\n    small: getImgUri('small')(imgs),\n    large: getImgUri('large')(imgs),\n  }),\n  prop('Common.ImageResources'),\n]);\n\nconst mapPhotos = safeCompose([map(mapToImg), prop('Common.Photos')]);\n\nconst getHeroPhoto = compose<Document, DynamicPrimaryImage, Hero>(\n  mapToImg,\n  prop('Dynamic.PrimaryImage')\n);\n\nconst mapCommonChargeToCharge = (commonCharge: CommonCharge): Charge => ({\n  currencyCode: commonCharge['Common.CurrencyCode'],\n  year: commonCharge['Common.Year'],\n  perUnit: commonCharge['Common.PerUnit'],\n  amountKind: commonCharge['Common.AmountKind'],\n  taxModifier: commonCharge['Common.TaxModifer'],\n  interval: commonCharge['Common.Interval'],\n  amount: commonCharge['Common.Amount'],\n  chargeKind: commonCharge['Common.ChargeKind'],\n  onApplication: commonCharge['Common.OnApplication'],\n  chargeModifier: commonCharge['Common.ChargeModifer'],\n});\n\nconst docToCharges = safeCompose([map(mapCommonChargeToCharge), prop('Common.Charges')]);\n\n// TODO add tests for missing min size and max size\nconst docToSizeRange = (doc: Document): Maybe<SizeRange> => {\n  if (!doc['Common.Sizes']) {\n    return undefined;\n  }\n\n  const minSize = doc['Common.Sizes'].find(s => s['Common.SizeKind'] === 'MinimumSize');\n  const maxSize = doc['Common.Sizes'].find(s => s['Common.SizeKind'] === 'TotalSize');\n  if (!minSize || !maxSize) {\n    return undefined;\n  }\n\n  const minSizeValue = minSize['Common.Dimensions'][0];\n  const maxSizeValue = maxSize['Common.Dimensions'][0];\n\n  return {\n    min: {\n      amount: minSizeValue['Common.Amount'],\n      units: minSizeValue['Common.DimensionsUnits'],\n    },\n    max: {\n      amount: maxSizeValue['Common.Amount'],\n      units: maxSizeValue['Common.DimensionsUnits'],\n    },\n  };\n};\n\nconst mapId = (doc: Document) => doc['Common.PrimaryKey'];\n\nexport const docToProperty = (locale: string) => (doc: Document): Maybe<Property> => {\n  try {\n    return {\n      address: docToAddress(doc),\n      numberOfBedrooms: docToNumberOfBedrooms(doc),\n      location: docToLocation(doc),\n      contacts: docToContacts(doc),\n      highlights: docToHighlights(locale)(doc),\n      description: {\n        strapline: docToStrapline(locale)(doc),\n        longDescription: docToLongDescription(locale)(doc),\n      },\n      info: {\n        energyPerformance: mapEnergyPerformance(doc),\n        floorPlans: mapFloorPlans(doc),\n      },\n      photos: {\n        hero: getHeroPhoto(doc),\n        main: mapPhotos(doc),\n      },\n      charges: docToCharges(doc),\n      id: mapId(doc),\n      size: docToSizeRange(doc),\n    };\n  } catch (ex) {\n    console.error(`Failed mapping property: ${mapId(doc)}`);\n    console.error(ex);\n    return undefined;\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}